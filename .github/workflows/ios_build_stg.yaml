name: "[DEV] Build and Publish iOS"
on:
  workflow_call:
    secrets:
      APPSTORE_CERT_BASE64:
        description: 証明書Base64
        required: true
      APPSTORE_CERT_PASSWORD:
        description: 証明書のパスワード
        required: true
      MOBILEPROVISION_ADHOC_BASE64:
        description: プロビジョニングプロファイル(Adhoc)
        required: true
      KEYCHAIN_PASSWORD:
        description: 一時的なKeychainのパスワード
        required: true
      FIREBASE_PROJ_DEV_NAME:
        description: プロジェクトID
        required: true
      FIREBASE_AUTH_TOKEN:
        description: Firebaseのトークン
        required: true
      FIREBASE_DEV_IOS_ID:
        description: FirebaseのiOS ID
        required: true
      FIREBASE_DEV_TOKEN:
        description: FirebaseのJson Token
        required: true
      EXPORT_OPTIONS:
        description: Export Options
        required: true
jobs:
  build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v1
        with:
          node-version: "18.x"
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.0"
      - name: Setup packages
        run: |
          flutter pub get
          dart run build_runner build -d

      - name: Bundle Install
        run: bundle install
        working-directory: ./ios

      - name: Keychain.p12
        run: |
          echo "${{ secrets.APPSTORE_CERT_BASE64 }}" > ios_distribution.p12.txt
          base64 --decode -i ios_distribution.p12.txt -o ios_distribution.p12
        working-directory: ./ios

      - name: ProvisioningProfile
        run: |
          echo "${{ secrets.MOBILEPROVISION_ADHOC_BASE64 }}" > adhoc.mobileprovision.txt
          base64 --decode -i adhoc.mobileprovision.txt -o adhoc.mobileprovision
        working-directory: ./ios

      - uses: actions/cache@v2
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install CocoaPods
        if: steps.cache-cocoapods.outputs.cache-hit != 'true'
        run: pod install
        working-directory: ./ios

      - name: list files
        run: ls -l
        working-directory: ./ios

      - name: Enterprise Build and App Distribution
        env:
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          CERT_PASSWORD: ${{ secrets.APPSTORE_CERT_PASSWORD }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_AUTH_TOKEN }}
          DISABLE_SWIFTLINT: true //SWIFTLINT fastlaneが引っかかるため
        run: |
          npm install -g firebase-tools
          bundle exec fastlane archive_stg_app_distribution
        working-directory: ./ios
